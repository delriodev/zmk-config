
// hold or toggle layer 1   
lower: tap_dance_0 {
    compatible = "zmk,behavior-tap-dance";
    label = "LAYER_TAP_DANCE";
    #binding-cells = <0>;
    tapping-term-ms = <200>;
    bindings = <&mo 1>, <&to 1>;
};

// hold or toggle layer 2
upper: tap_dance_1 {
    compatible = "zmk,behavior-tap-dance";
    label = "UPPER_LAYER_TAP_DANCE";
    #binding-cells = <0>;
    tapping-term-ms = <200>;
    bindings = <&mo 2>, <&to 2>;
};

// key lshift rshift alt
//  (     {     [     <
open_one: open_one {
    compatible = "zmk,behavior-mod-morph";
    label = "OPEN_ONE";
    #binding-cells = <0>;
    bindings = <&kp FR_LPRN>, <&kp FR_LCBR>;
    mods = <(MOD_LSFT)>;
};
open_two: open_two {
    compatible = "zmk,behavior-mod-morph";
    label = "OPEN_TWO";
    #binding-cells = <0>;
    bindings = <&open_one>, <&kp FR_LBRC>;
    mods = <(MOD_LALT)>;
};
open: open {
    compatible = "zmk,behavior-mod-morph";
    label = "OPEN";
    #binding-cells = <0>;
    bindings = <&open_two>, <&kp FR_LABK>;
    mods = <(MOD_LALT)>;
};

// // key lshift rshift alt
// //  )     }     ]     >
// close1: close1 {
//     compatible = "zmk,behavior-mod-morph";
//     label = "CLOSE1";
//     #binding-cells = <0>;
//     bindings = <&kp FR_RPRN>, <&kp FR_RCBR>;
//     mods = <(MOD_LSHFT)>;
// };
// close2: close2 {
//     compatible = "zmk,behavior-mod-morph";
//     label = "CLOSE2";
//     #binding-cells = <0>;
//     bindings = <&close1>, <&kp FR_RBRC>;
//     mods = <(MOD_RSHFT)>;
// };
// close: close {
//     compatible = "zmk,behavior-mod-morph";
//     label = "CLOSE";
//     #binding-cells = <0>;
//     bindings = <&close2>, <&kp FR_RABK>;
//     mods = <(MOD_LALT)>;
// };

// // key lshift rshift alt
// //  ?     !     &     
// mark1: mark1 {
//     compatible = "zmk,behavior-mod-morph";
//     label = "MARK1";
//     #binding-cells = <0>;
//     bindings = <&kp FR_QUES>, <&kp FR_EXLM>;
//     mods = <(MOD_LSHFT)>;
// };
// mark: mark {
//     compatible = "zmk,behavior-mod-morph";
//     label = "MARK";
//     #binding-cells = <0>;
//     bindings = <&mark1>, <&kp FR_AMPR>;
//     mods = <(MOD_RSHFT)>;
// };

marks: marks {
    compatible = "zmk,behavior-mod-morph";
    label = "MARKS";
    #binding-cells = <0>;
    bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
    mods = <(MOD_LSFT)>;
};

apos: apos {
    compatible = "zmk,behavior-mod-morph";
    label = "APOS";
    #binding-cells = <0>;
    bindings = <&kp DOUBLE_QUOTES>, <&kp APOSTROPHE>;
    mods = <(MOD_LSFT)>;
};
    
dashes: dashes {
    compatible = "zmk,behavior-mod-morph";
    label = "DASHES";
    #binding-cells = <0>;
    bindings = <&kp EQUAL>, <&kp UNDERSCORE>;
    mods = <(MOD_LSFT)>;
};
dashes_plus: dashes_plus {
    compatible = "zmk,behavior-mod-morph";
    label = "dashes";
    #binding-cells = <0>;
    bindings = <&dashes>, <&kp MINUS>;
    mods = <(MOD_LALT)>;
};
    
brackets: brackets {
    compatible = "zmk,behavior-mod-morph";
    label = "BRACKETS";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
    mods = <(MOD_LSFT)>;
};
    
braces: braces {
    compatible = "zmk,behavior-mod-morph";
    label = "BRACES";
    #binding-cells = <0>;
    bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
    mods = <(MOD_LSFT)>;
};
    
parentheses: parentheses {
    compatible = "zmk,behavior-mod-morph";
    label = "PARENTHESES";
    #binding-cells = <0>;
    bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
    mods = <(MOD_LSFT)>;
};
    
commas: commas {
    compatible = "zmk,behavior-mod-morph";
    label = "COMMAS";
    #binding-cells = <0>;
    bindings = <&kp COMMA>, <&kp SEMICOLON>;
    mods = <(MOD_LSFT)>;
};
    
periods: periods {
    compatible = "zmk,behavior-mod-morph";
    label = "PERIODS";
    #binding-cells = <0>;
    bindings = <&kp PERIOD>, <&kp COLON>;
    mods = <(MOD_LSFT)>;
};
    
at: at {
    compatible = "zmk,behavior-mod-morph";
    label = "AT";
    #binding-cells = <0>;
    bindings = <&kp AT>, <&kp POUND>;
    mods = <(MOD_LSFT)>;
};

// =  or  _ (shift)  or  - (left alt)       
slashes: slashes {
    compatible = "zmk,behavior-mod-morph";
    label = "SLASHES";
    #binding-cells = <0>;
    bindings = <&kp SLASH>, <&kp BACKSLASH>;
    mods = <(MOD_LSFT)>;
};
    
arrows: arrows {
    compatible = "zmk,behavior-mod-morph";
    label = "ARROWS";
    #binding-cells = <0>;
    bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
    mods = <(MOD_LSFT)>;
};
    
bools: bools {
    compatible = "zmk,behavior-mod-morph";
    label = "BOOLS";
    #binding-cells = <0>;
    bindings = <&kp AMPERSAND>, <&kp PIPE>;
    mods = <(MOD_LSFT)>;
};
    
accents: accents {
    compatible = "zmk,behavior-mod-morph";
    label = "ACCENTS";
    #binding-cells = <0>;
    bindings = <&kp GRAVE>, <&kp CARET>;
    mods = <(MOD_LSFT)>;
};
    
chars_fr: chars_fr {
    compatible = "zmk,behavior-mod-morph";
    label = "CHARS_FR";
    #binding-cells = <0>;
    bindings = <&kp CARET>, <&kp CARET>;
    mods = <(MOD_LSFT)>;
};
    
left: left {
    compatible = "zmk,behavior-mod-morph";
    label = "LEFT";
    #binding-cells = <0>;
    bindings = <&kp LEFT>, <&kp HOME>;
    mods = <(MOD_LALT)>;
};
    
right: right {
    compatible = "zmk,behavior-mod-morph";
    label = "RIGHT";
    #binding-cells = <0>;
    bindings = <&kp RIGHT>, <&kp END>;
    mods = <(MOD_LALT)>;
};
    
up: up {
    compatible = "zmk,behavior-mod-morph";
    label = "UP";
    #binding-cells = <0>;
    bindings = <&kp UP>, <&kp PG_UP>;
    mods = <(MOD_LALT)>;
};
    
down: down {
    compatible = "zmk,behavior-mod-morph";
    label = "DOWN";
    #binding-cells = <0>;
    bindings = <&kp DOWN>, <&kp PG_DN>;
    mods = <(MOD_LALT)>;
};
